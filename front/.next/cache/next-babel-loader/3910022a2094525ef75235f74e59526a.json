{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var addCommentDone = useSelector(function (state) {\n    return state.post;\n  });\n\n  var _useState = useState(''),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setText('');\n    }\n  });\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    console.log(commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"4G1kF5v/NvynCErI7QpRrHEip1Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useState","PropTypes","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","setCommentText","setText","onSubmitComment","console","log","type","data","content","postId","userId","onChangeCommentText","e","target","value","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;AACA,MAAMI,cAAc,GAAGT,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACH,IAAjB;AAAA,GAAD,CAAlC;;AACA,kBAAsCN,QAAQ,CAAC,EAAD,CAA9C;AAAA,MAAOa,WAAP;AAAA,MAAoBC,cAApB;;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIa,cAAJ,EAAmB;AACfG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GAJQ,CAAT;AAMA,MAAMC,eAAe,GAAGlB,WAAW,CAAC,YAAM;AACtCmB,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAACE,EAAjB,EAAqBK,WAArB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACAN,IAAAA,QAAQ,CAAC;AACLY,MAAAA,IAAI,EAAEf,mBADD;AAELgB,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEhB,IAAI,CAACE,EAArC;AAAyCe,QAAAA,MAAM,EAAEf;AAAjD;AAFD,KAAD,CAAR;AAIH,GAPkC,EAOhC,CAACK,WAAD,EAAcL,EAAd,CAPgC,CAAnC;AASA,MAAMgB,mBAAmB,GAAG1B,WAAW,CAAC,UAAC2B,CAAD,EAAO;AAC3CX,IAAAA,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEX,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEY,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEhB,WAAvB;AAAoC,QAAA,QAAQ,EAAEW,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAjCD;;GAAM1B,W;UACeH,W,EACNC,W,EACYA,W;;;KAHrBE,W;AAmCNA,WAAW,CAAC2B,SAAZ,GAAwB;AACpB1B,EAAAA,IAAI,EAAEL,SAAS,CAACgC,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe7B,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ADD_COMMENT_REQUEST} from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const addCommentDone = useSelector((state) => state.post);\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone){\r\n            setText('')\r\n        }\r\n    })\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n        console.log(commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id},\r\n        });\r\n    }, [commentText, id]);\r\n\r\n    const onChangeCommentText = useCallback((e) => {\r\n        setCommentText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">POST</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}