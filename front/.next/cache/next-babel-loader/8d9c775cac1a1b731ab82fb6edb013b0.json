{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //개발용인지 아니면 배포용인지 구분\n\nimport thunkMiddleware from 'redux-thunk'; //리덕스 썽그라걸 불러와서 썽크미들웨어를 사용 \n//리듀서를 불러오는거\n\nimport reducer from '../reducers';\n\nvar configureStore = function configureStore(context) {\n  console.log(context); //리덕스 성크는 middleware은 리덕스의 기능을 향상시켜주는거\n\n  var middlewares = [thunkMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","thunkMiddleware","reducer","configureStore","context","console","log","middlewares","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAAgE;;AAEhE,OAAOC,eAAP,MAA4B,aAA5B,C,CAA2C;AAE3C;;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EADgC,CAEhC;;AACA,MAAMG,WAAW,GAAG,CAACN,eAAD,CAApB;AACA,MAAMO,QAAQ,GAAG,QACXV,OAAO,CAACF,eAAe,MAAf,SAAmBW,WAAnB,CAAD,CADI,GAEXP,mBAAmB,CACjBJ,eAAe,MAAf,SAAmBW,WAAnB,CADiB,CAFzB;AAKA,MAAME,KAAK,GAAGZ,WAAW,CAACK,OAAD,EAAUM,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CAXD;;AAaA,IAAMC,OAAO,GAAGX,aAAa,CAACI,cAAD,EAAiB;AAAEQ,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'; //개발용인지 아니면 배포용인지 구분\r\n\r\nimport thunkMiddleware from 'redux-thunk'; //리덕스 썽그라걸 불러와서 썽크미들웨어를 사용 \r\n\r\n//리듀서를 불러오는거\r\nimport reducer from '../reducers';\r\n\r\nconst configureStore = (context) => {\r\n    console.log(context);\r\n    //리덕스 성크는 middleware은 리덕스의 기능을 향상시켜주는거\r\n    const middlewares = [thunkMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(\r\n            applyMiddleware(...middlewares),\r\n        );\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}