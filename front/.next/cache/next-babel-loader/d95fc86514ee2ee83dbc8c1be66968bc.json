{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortId from 'shortid';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'PK'\n    },\n    content: '416 정말어렵다 다신하기싫다 쿤 싫다 너무 어렵게한다 왜그렇게 하는지 모르겠다 진짜로 어렵게만들면 뭐 좋나 꼭 패스해야함 hard #hard #cse416',\n    Images: [{\n      src: 'http://cubelink.me/media/article/6D25BEE8-B8E2-4405-9FB6-E8AFDC2E3441.jpeg'\n    }, {\n      src: 'http://cubelink.me/media/article/3303D5A6-966C-44F5-8B1A-98FAA7B8135C.jpeg'\n    }, {\n      src: 'http://cubelink.me/media/article/1613186271115-7.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: 'Coolllll'\n    }, {\n      User: {\n        nickname: 'Hawon'\n      },\n      content: 'goooood'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'PKKK'\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'PKCC'\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n    // 커맨트\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n\n        const post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts,\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/reducers/post.js"],"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","generate","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initialState = {\r\n  mainPosts: [{\r\n    id: 1,\r\n    User: {\r\n      id: 1,\r\n      nickname: 'PK',\r\n    },\r\n    content: '416 정말어렵다 다신하기싫다 쿤 싫다 너무 어렵게한다 왜그렇게 하는지 모르겠다 진짜로 어렵게만들면 뭐 좋나 꼭 패스해야함 hard #hard #cse416',\r\n    Images: [{\r\n      src: 'http://cubelink.me/media/article/6D25BEE8-B8E2-4405-9FB6-E8AFDC2E3441.jpeg',\r\n    }, {\r\n      src: 'http://cubelink.me/media/article/3303D5A6-966C-44F5-8B1A-98FAA7B8135C.jpeg',\r\n    }, {\r\n      src: 'http://cubelink.me/media/article/1613186271115-7.jpg',\r\n    }],\r\n    Comments: [{\r\n      User: {\r\n        nickname: 'nero',\r\n      },\r\n      content: 'Coolllll',\r\n    }, {\r\n      User: {\r\n        nickname: 'Hawon',\r\n      },\r\n      content: 'goooood',\r\n    }],\r\n  }],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'PKKK',\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'PKCC',\r\n  },\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: null,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true,\r\n      };\r\n\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n\r\n      // 커맨트\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: true,\r\n        addCommentDone: false,\r\n        addCommentError: null,\r\n      };\r\n    case ADD_COMMENT_SUCCESS: {\r\n      const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n      const post = { ...state.mainPosts[postIndex] };\r\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = post;\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n        addCommentLoading: false,\r\n        addCommentDone: true,\r\n      };\r\n    }\r\n\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentError: action.error,\r\n      };\r\n\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}