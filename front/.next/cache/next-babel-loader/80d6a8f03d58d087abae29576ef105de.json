{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension'; //개발용인지 아니면 배포용인지 구분\n\nimport createSagaMiddleware from 'redux-saga'; //리덕스 SAGA\n//리듀서를 불러오는거\n\nimport reducer from '../reducers';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  consol.log(action);\n  return next(action);\n};\n\nconst configureStore = context => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, LoggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/store/configureStore.js"],"names":["applyMiddleware","createStore","compose","createWrapper","composeWithDevTools","createSagaMiddleware","reducer","loggerMiddleware","dispatch","getState","next","action","consol","log","configureStore","context","sagaMiddleware","middlewares","LoggerMiddleware","enhancer","store","wrapper","debug"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAAgE;;AAEhE,OAAOC,oBAAP,MAAiC,YAAjC,C,CAA+C;AAE/C;;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACvEC,EAAAA,MAAM,CAACC,GAAP,CAAWF,MAAX;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAHD;;AAMA,MAAMG,cAAc,GAAIC,OAAD,IAAa;AAChC,QAAMC,cAAc,GAAGX,oBAAoB,EAA3C;AACA,QAAMY,WAAW,GAAG,CAACD,cAAD,EAAiBE,gBAAjB,CAApB;AACA,QAAMC,QAAQ,GAAG,QACXjB,OAAO,CAACF,eAAe,CAAC,GAAGiB,WAAJ,CAAhB,CADI,GAEXb,mBAAmB,CACjBJ,eAAe,CAAC,GAAGiB,WAAJ,CADE,CAFzB;AAKA,QAAMG,KAAK,GAAGnB,WAAW,CAACK,OAAD,EAAUa,QAAV,CAAzB;AACA,SAAOC,KAAP;AACH,CAVD;;AAYA,MAAMC,OAAO,GAAGlB,aAAa,CAACW,cAAD,EAAiB;AAAEQ,EAAAA,KAAK;AAAP,CAAjB,CAA7B;AAEA,eAAeD,OAAf","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'; //개발용인지 아니면 배포용인지 구분\r\n\r\nimport createSagaMiddleware from 'redux-saga'; //리덕스 SAGA\r\n\r\n//리듀서를 불러오는거\r\nimport reducer from '../reducers';\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n    consol.log(action);\r\n    return next(action);\r\n};\r\n\r\n\r\nconst configureStore = (context) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, LoggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(\r\n            applyMiddleware(...middlewares),\r\n        );\r\n    const store = createStore(reducer, enhancer);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}