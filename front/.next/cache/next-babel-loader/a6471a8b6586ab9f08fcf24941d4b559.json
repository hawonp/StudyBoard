{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//엑션을 의미한다\nimport { HYDRATE } from \"next-redux-wrapper\"; //리듀서 합쳐주는거\n\nimport { combineReducers } from 'redux';\nimport user from './user';\nimport post from './post'; //초기상태\n//비동기 엑션 크리에이터\n//action creator example\n// const changeNickname = (data) => {\n//     return {\n//         type: 'CHANGE_NICKNAME',\n//         data,\n//     }\n// };\n//(이전상태, 액션) => 다음상태\n//서버사이드 렌더링을위해서 HYDRATE를 indext 부분을 넣은거다 없어도 돼는건데\n\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/reducers/index.js"],"names":["HYDRATE","combineReducers","user","post","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA;AACA,SAAQA,OAAR,QAAsB,oBAAtB,C,CACA;;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,WAAW,GAAGH,eAAe,CAAC;AAChCI,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAC3B,YAAQA,MAAM,CAACC,IAAf;AACI,WAAKR,OAAL;AACIS,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACJ;AACI,eAAOL,KAAP;AALR;AAOH,GAT+B;AAUhCJ,EAAAA,IAVgC;AAWhCC,EAAAA;AAXgC,CAAD,CAAnC;AAcA,eAAeC,WAAf","sourcesContent":["//엑션을 의미한다\r\nimport {HYDRATE} from \"next-redux-wrapper\";\r\n//리듀서 합쳐주는거\r\nimport { combineReducers } from 'redux';\r\nimport user from './user';\r\nimport post from './post';\r\n//초기상태\r\n\r\n\r\n//비동기 엑션 크리에이터\r\n\r\n//action creator example\r\n// const changeNickname = (data) => {\r\n//     return {\r\n//         type: 'CHANGE_NICKNAME',\r\n//         data,\r\n//     }\r\n// };\r\n\r\n//(이전상태, 액션) => 다음상태\r\n//서버사이드 렌더링을위해서 HYDRATE를 indext 부분을 넣은거다 없어도 돼는건데\r\nconst rootReducer = combineReducers({\r\n    index: (state = {}, action) => {\r\n        switch (action.type) {\r\n            case HYDRATE:\r\n                console.log('HYDRATE', action);\r\n                return { ...state, ...action.payload };\r\n            default:\r\n                return state;\r\n        }\r\n    },\r\n    user,\r\n    post,\r\n});\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}