{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\components\\\\CommentForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from 'antd';\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useState = useState(''),\n      commentText = _useState[0],\n      setCommentText = _useState[1];\n\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    console.log(commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: 'relative',\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: 'absolute',\n          right: 0,\n          bottom: -40\n        },\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"1wqVADvjgIVgSljmnOA78GdW33E=\", false, function () {\n  return [useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/components/CommentForm.js"],"names":["Button","Form","Input","React","useCallback","useState","PropTypes","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","commentText","setCommentText","onSubmitComment","console","log","dispatch","type","data","content","postId","userId","onChangeCommentText","e","target","value","position","margin","right","bottom","propTypes","object","isRequired"],"mappings":";;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA2B,aAA3B;AACA,SAAQC,mBAAR,QAAkC,kBAAlC;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC9B,MAAMC,EAAE,GAAGJ,WAAW,CAAC,UAACK,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB;;AACA,kBAAsCN,QAAQ,CAAC,EAAD,CAA9C;AAAA,MAAOU,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,eAAe,GAAGb,WAAW,CAAC,YAAM;AACtCc,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACC,EAAjB,EAAqBI,WAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAK,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEb,mBADD;AAELc,MAAAA,IAAI,EAAE;AAAEC,QAAAA,OAAO,EAAER,WAAX;AAAwBS,QAAAA,MAAM,EAAEd,IAAI,CAACC,EAArC;AAAyCc,QAAAA,MAAM,EAAEd;AAAjD;AAFD,KAAD,CAAR;AAIH,GAPkC,EAOhC,CAACI,WAAD,EAAcJ,EAAd,CAPgC,CAAnC;AASA,MAAMe,mBAAmB,GAAGtB,WAAW,CAAC,UAACuB,CAAD,EAAO;AAC3CX,IAAAA,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAFsC,EAEpC,EAFoC,CAAvC;AAIA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEZ,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEa,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAEhB,WAAvB;AAAoC,QAAA,QAAQ,EAAEW,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE,UAAZ;AAAwBE,UAAAA,KAAK,EAAE,CAA/B;AAAkCC,UAAAA,MAAM,EAAE,CAAC;AAA3C,SAAf;AAAgE,QAAA,IAAI,EAAC,SAArE;AAA+E,QAAA,QAAQ,EAAC,QAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAzBD;;GAAMxB,W;UACSF,W;;;KADTE,W;AA2BNA,WAAW,CAACyB,SAAZ,GAAwB;AACpBxB,EAAAA,IAAI,EAAEJ,SAAS,CAAC6B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAe3B,WAAf","sourcesContent":["import { Button, Form, Input } from 'antd';\r\nimport React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector} from \"react-redux\";\r\nimport {ADD_COMMENT_REQUEST} from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n        console.log(commentText);\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id},\r\n        });\r\n    }, [commentText, id]);\r\n\r\n    const onChangeCommentText = useCallback((e) => {\r\n        setCommentText(e.target.value);\r\n    }, []);\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: 'relative', margin: 0 }}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button style={{ position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">POST</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}