{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//엑션을 의미한다\nimport { HYDRATE } from \"next-redux-wrapper\"; //초기상태\n\nvar initialState = {\n  user: {},\n  post: {}\n};\nexport var loginAction = function loginAction(data) {\n  return {\n    type: 'LOG_IN',\n    data: data\n  };\n};\nexport var logoutAction = function logoutAction() {\n  return {\n    type: 'LOG_OUT'\n  };\n}; //비동기 엑션 크리에이터\n//action creator example\n// const changeNickname = (data) => {\n//     return {\n//         type: 'CHANGE_NICKNAME',\n//         data,\n//     }\n// };\n//(이전상태, 액션) => 다음상태\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    //\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case 'LOG_IN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIN: true,\n          user: action.data\n        })\n      });\n\n    case 'LOG_OUT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIN: false,\n          user: null\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/reducers/index.js"],"names":["HYDRATE","initialState","user","post","loginAction","data","type","logoutAction","rootReducer","state","action","payload","isLoggedIN"],"mappings":";;;;;;AAAA;AACA,SAAQA,OAAR,QAAsB,oBAAtB,C,CACA;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC,EADY;AAIjBC,EAAAA,IAAI,EAAC;AAJY,CAArB;AASA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAE,QADH;AAEHD,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJM,C,CAKP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAClD,UAAQA,MAAM,CAACJ,IAAf;AACI;AACA,SAAKN,OAAL;AACI,6CAAYS,KAAZ,GAAsBC,MAAM,CAACC,OAA7B;;AACJ,SAAK,QAAL;AACI,6CACOF,KADP;AAEIP,QAAAA,IAAI,kCACGO,KAAK,CAACP,IADT;AAEAU,UAAAA,UAAU,EAAE,IAFZ;AAGAV,UAAAA,IAAI,EAAEQ,MAAM,CAACL;AAHb;AAFR;;AAQJ,SAAK,SAAL;AACI,6CACOI,KADP;AAEIP,QAAAA,IAAI,kCACGO,KAAK,CAACP,IADT;AAEAU,UAAAA,UAAU,EAAE,KAFZ;AAGAV,UAAAA,IAAI,EAAE;AAHN;AAFR;;AAQJ;AACI,aAAOO,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,WAAf","sourcesContent":["//엑션을 의미한다\r\nimport {HYDRATE} from \"next-redux-wrapper\";\r\n//초기상태\r\nconst initialState = {\r\n    user:{\r\n    }\r\n    ,\r\n    post:{\r\n\r\n    }\r\n};\r\n\r\nexport const loginAction = (data) => {\r\n    return {\r\n        type: 'LOG_IN',\r\n        data,\r\n    }\r\n}\r\n\r\nexport const logoutAction = () => {\r\n    return {\r\n        type: 'LOG_OUT',\r\n    }\r\n}\r\n//비동기 엑션 크리에이터\r\n\r\n//action creator example\r\n// const changeNickname = (data) => {\r\n//     return {\r\n//         type: 'CHANGE_NICKNAME',\r\n//         data,\r\n//     }\r\n// };\r\n\r\n//(이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        //\r\n        case HYDRATE:\r\n            return { ...state, ...action.payload};\r\n        case 'LOG_IN':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIN: true,\r\n                    user: action.data,\r\n                }\r\n            };\r\n        case 'LOG_OUT':\r\n            return{\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIN: false,\r\n                    user: null,\r\n                }\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}