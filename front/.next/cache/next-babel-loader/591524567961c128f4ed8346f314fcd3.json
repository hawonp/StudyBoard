{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortId from 'shortid';\nimport produce from 'immer';\n\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  id: 1,\n  nickname: 'PK',\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: 'pk'\n  }, {\n    nickname: 'hawon'\n  }, {\n    nickname: 'Shin jeoungho'\n  }],\n  Followers: [{\n    nickname: 'pk'\n  }, {\n    nickname: 'hawon'\n  }, {\n    nickname: 'jeoungho'\n  }]\n});\n\nexport const initialState = {\n  logInLoading: false,\n  // 로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  // 로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  // 회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  // 닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n}); // return produce 라는건데 지금 eslint 편하게 코드하기위해서 추가해놨음\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    // 언팔로우\n    case FOLLOW_REQUEST:\n      draft.followLoading = true;\n      draft.followError = null;\n      draft.followDone = false;\n      break;\n\n    case FOLLOW_SUCCESS:\n      draft.followLoading = false;\n      draft.me = dummyUser(action.data);\n      draft.followDone = true;\n      break;\n\n    case FOLLOW_FAILURE:\n      draft.followLoading = false;\n      draft.followError = action.error;\n      break;\n    // 팔로우\n\n    case UNFOLLOW_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case UNFOLLOW_SUCCESS:\n      draft.logInLoading = false;\n      draft.me = dummyUser(action.data);\n      draft.logInDone = true;\n      break;\n\n    case UNFOLLOW_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n    // 로그인\n\n    case LOG_IN_REQUEST:\n      draft.logInLoading = true;\n      draft.logInError = null;\n      draft.logInDone = false;\n      break;\n\n    case LOG_IN_SUCCESS:\n      draft.logInLoading = false;\n      draft.me = dummyUser(action.data);\n      draft.logInDone = true;\n      break;\n\n    case LOG_IN_FAILURE:\n      draft.logInLoading = false;\n      draft.logInError = action.error;\n      break;\n    // 로그아웃\n\n    case LOG_OUT_REQUEST:\n      draft.logOutLoading = true;\n      draft.logOutError = null;\n      draft.logOutDone = false;\n      break;\n\n    case LOG_OUT_SUCCESS:\n      draft.logOutLoading = false;\n      draft.logOutDone = true;\n      draft.me = null;\n      break;\n\n    case LOG_OUT_FAILURE:\n      draft.logOutLoading = false;\n      draft.logOutError = action.error;\n      break;\n    // 회원가입\n\n    case SIGN_UP_REQUEST:\n      draft.signUpLoading = true;\n      draft.signUpError = null;\n      draft.signUpDone = false;\n      break;\n\n    case SIGN_UP_SUCCESS:\n      draft.signUpLoading = false;\n      draft.signUpDone = true;\n      break;\n\n    case SIGN_UP_FAILURE:\n      draft.signUpLoading = false;\n      draft.signUpError = action.error;\n      break;\n    // 닉네임변경\n\n    case CHANGE_NICKNAME_REQUEST:\n      draft.changeNicknameLoading = true;\n      draft.changeNicknameError = null;\n      draft.changeNicknameDone = false;\n      break;\n\n    case CHANGE_NICKNAME_SUCCESS:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameDone = true;\n      break;\n\n    case CHANGE_NICKNAME_FAILURE:\n      draft.changeNicknameLoading = false;\n      draft.changeNicknameError = action.error;\n      break;\n    // 자기자신에게 포스트 붙여주는거\n\n    case ADD_POST_TO_ME:\n      draft.me.Posts.unshift({\n        id: action.data\n      });\n      break;\n    // 그 전에꺼 inner 뭐지.. 쉽네\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: [{ id: action.data }, ...state.me.Posts],\n    //   },\n    // };\n\n    case REMOVE_POST_OF_ME:\n      draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n      break;\n    // return {\n    //   ...state,\n    //   me: {\n    //     ...state.me,\n    //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n    //   },\n    // };\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/reducers/user.js"],"names":["shortId","produce","dummyUser","data","id","nickname","Posts","Followings","Followers","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","followLoading","followError","followDone","error","unshift","filter","v"],"mappings":"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","sourcesContent":["import shortId from 'shortid';\r\nimport produce from 'immer';\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  id: 1,\r\n  nickname: 'PK',\r\n  Posts: [{ id: 1 }],\r\n  Followings: [{ nickname: 'pk' }, { nickname: 'hawon' }, { nickname: 'Shin jeoungho' }],\r\n  Followers: [{ nickname: 'pk' }, { nickname: 'hawon' }, { nickname: 'jeoungho' }],\r\n});\r\n\r\nexport const initialState = {\r\n  logInLoading: false, // 로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n  logOutLoading: false, // 로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n  signUpLoading: false, // 회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n  changeNicknameLoading: false, // 닉네임 변경 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST';\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = 'CHANGE_NICKNAME_REQUEST';\r\nexport const CHANGE_NICKNAME_SUCCESS = 'CHANGE_NICKNAME_SUCCESS';\r\nexport const CHANGE_NICKNAME_FAILURE = 'CHANGE_NICKNAME_FAILURE';\r\n\r\nexport const FOLLOW_REQUEST = 'FOLLOW_REQUEST';\r\nexport const FOLLOW_SUCCESS = 'FOLLOW_SUCCESS';\r\nexport const FOLLOW_FAILURE = 'FOLLOW_FAILURE';\r\n\r\nexport const UNFOLLOW_REQUEST = 'UNFOLLOW_REQUEST';\r\nexport const UNFOLLOW_SUCCESS = 'UNFOLLOW_SUCCESS';\r\nexport const UNFOLLOW_FAILURE = 'UNFOLLOW_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\nexport const loginRequestAction = (data) => ({\r\n  type: LOG_IN_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const logoutRequestAction = () => ({\r\n  type: LOG_OUT_REQUEST,\r\n});\r\n\r\n// return produce 라는건데 지금 eslint 편하게 코드하기위해서 추가해놨음\r\nconst reducer = (state = initialState, action) => produce(state, (draft) => {\r\n  switch (action.type) {\r\n    // 언팔로우\r\n    case FOLLOW_REQUEST:\r\n      draft.followLoading = true;\r\n      draft.followError = null;\r\n      draft.followDone = false;\r\n      break;\r\n    case FOLLOW_SUCCESS:\r\n      draft.followLoading = false;\r\n      draft.me = dummyUser(action.data);\r\n      draft.followDone = true;\r\n      break;\r\n    case FOLLOW_FAILURE:\r\n      draft.followLoading = false;\r\n      draft.followError = action.error;\r\n      break;\r\n\r\n    // 팔로우\r\n    case UNFOLLOW_REQUEST:\r\n      draft.logInLoading = true;\r\n      draft.logInError = null;\r\n      draft.logInDone = false;\r\n      break;\r\n    case UNFOLLOW_SUCCESS:\r\n      draft.logInLoading = false;\r\n      draft.me = dummyUser(action.data);\r\n      draft.logInDone = true;\r\n      break;\r\n    case UNFOLLOW_FAILURE:\r\n      draft.logInLoading = false;\r\n      draft.logInError = action.error;\r\n      break;\r\n\r\n    // 로그인\r\n    case LOG_IN_REQUEST:\r\n      draft.logInLoading = true;\r\n      draft.logInError = null;\r\n      draft.logInDone = false;\r\n      break;\r\n    case LOG_IN_SUCCESS:\r\n      draft.logInLoading = false;\r\n      draft.me = dummyUser(action.data);\r\n      draft.logInDone = true;\r\n      break;\r\n    case LOG_IN_FAILURE:\r\n      draft.logInLoading = false;\r\n      draft.logInError = action.error;\r\n      break;\r\n\r\n      // 로그아웃\r\n    case LOG_OUT_REQUEST:\r\n      draft.logOutLoading = true;\r\n      draft.logOutError = null;\r\n      draft.logOutDone = false;\r\n      break;\r\n    case LOG_OUT_SUCCESS:\r\n      draft.logOutLoading = false;\r\n      draft.logOutDone = true;\r\n      draft.me = null;\r\n      break;\r\n    case LOG_OUT_FAILURE:\r\n      draft.logOutLoading = false;\r\n      draft.logOutError = action.error;\r\n      break;\r\n\r\n      // 회원가입\r\n    case SIGN_UP_REQUEST:\r\n      draft.signUpLoading = true;\r\n      draft.signUpError = null;\r\n      draft.signUpDone = false;\r\n      break;\r\n    case SIGN_UP_SUCCESS:\r\n      draft.signUpLoading = false;\r\n      draft.signUpDone = true;\r\n      break;\r\n    case SIGN_UP_FAILURE:\r\n      draft.signUpLoading = false;\r\n      draft.signUpError = action.error;\r\n      break;\r\n\r\n      // 닉네임변경\r\n    case CHANGE_NICKNAME_REQUEST:\r\n      draft.changeNicknameLoading = true;\r\n      draft.changeNicknameError = null;\r\n      draft.changeNicknameDone = false;\r\n      break;\r\n    case CHANGE_NICKNAME_SUCCESS:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameDone = true;\r\n      break;\r\n    case CHANGE_NICKNAME_FAILURE:\r\n      draft.changeNicknameLoading = false;\r\n      draft.changeNicknameError = action.error;\r\n      break;\r\n\r\n      // 자기자신에게 포스트 붙여주는거\r\n    case ADD_POST_TO_ME:\r\n      draft.me.Posts.unshift({ id: action.data });\r\n      break;\r\n\r\n      // 그 전에꺼 inner 뭐지.. 쉽네\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n      //   },\r\n      // };\r\n\r\n    case REMOVE_POST_OF_ME:\r\n      draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n      break;\r\n\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n      //   },\r\n      // };\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}