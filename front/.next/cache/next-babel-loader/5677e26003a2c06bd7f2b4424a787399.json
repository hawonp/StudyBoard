{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\components\\\\ImagesZoom\\\\index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport Slick from 'react-slick';\nimport { Button } from \"antd\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Overlay = styled.div`\n  position: fixed;\n  z-index: 5000;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\nconst Header = styled.header`\n  height: 44px;\n  background: white;\n  position: relative;\n  padding: 0;\n  text-align: center;\n  \n  & h1{\n    margin: 0;\n    font-size: 17px;\n    color: #333;\n    line-height: 44px;\n  }\n  \n`;\nconst CloseBtn = styled(CloseOutlined)`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 15px;\n  line-height: 14px;\n  cursor: pointer;\n`;\nconst SlickWrapper = styled.div`\n  height: calc(100% - 44px);\n  background: #090909;\n`;\nconst ImgWrapper = styled.div`\n  padding:32px;\n  text-align: center;\n  \n  & img {\n    margin: 0 auto;\n    max-height: 750px;\n  }\n`;\nconst Global = createGlobalStyle`\n    .slick-slide{\n      display: inline-block;\n    }\n    .ant-card-cover {\n      transform: none !important;\n    }\n`;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  return /*#__PURE__*/_jsxDEV(Overlay, {\n    children: [/*#__PURE__*/_jsxDEV(Global, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Detail Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CloseBtn, {\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SlickWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slick, {\n          initialSlide: 0,\n          afterChange: slide => setCurrentSlide(slide),\n          infinite: true,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          children: images.map(v => /*#__PURE__*/_jsxDEV(ImgWrapper, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: v.src,\n              alt: v.src\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, v.src, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","Button","styled","createGlobalStyle","Overlay","div","Header","header","CloseBtn","CloseOutlined","SlickWrapper","ImgWrapper","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,MAAR,QAAqB,MAArB;AAEA,OAAOC,MAAP,IAAgBC,iBAAhB,QAAwC,mBAAxC;;AAEA,MAAMC,OAAO,GAAEF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAMC,QAAQ,GAAGN,MAAM,CAACO,aAAD,CAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMC,YAAY,GAAGR,MAAM,CAACG,GAAI;AAChC;AACA;AACA,CAHA;AAKA,MAAMM,UAAU,GAAGT,MAAM,CAACG,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMO,MAAM,GAAGT,iBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,MAAMU,UAAU,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAuB;AACtC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCnB,QAAQ,CAAC,CAAD,CAAhD;AACA,sBACI,QAAC,OAAD;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEiB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI,QAAC,YAAD;AAAA,6BACI;AAAA,gCACI,QAAC,KAAD;AACI,UAAA,YAAY,EAAE,CADlB;AAEI,UAAA,WAAW,EAAGG,KAAD,IAAWD,eAAe,CAACC,KAAD,CAF3C;AAGI,UAAA,QAAQ,MAHZ;AAII,UAAA,YAAY,EAAE,CAJlB;AAKI,UAAA,cAAc,EAAE,CALpB;AAAA,oBAOKJ,MAAM,CAACK,GAAP,CAAYC,CAAD,iBACR,QAAC,UAAD;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,CAAC,CAACC,GAAZ;AAAiB,cAAA,GAAG,EAAED,CAAC,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ,aAAiBD,CAAC,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA,kBADH;AAPL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI,QAAC,SAAD;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAjCD;;AAmCAR,UAAU,CAACS,SAAX,GAAuB;AACnBR,EAAAA,MAAM,EAAEf,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACyB,KAAV,CAAgB;AACtCH,IAAAA,GAAG,EAAEtB,SAAS,CAAC0B;AADuB,GAAhB,CAAlB,EAEJC,UAHe;AAInBX,EAAAA,OAAO,EAAEhB,SAAS,CAAC4B,IAAV,CAAeD;AAJL,CAAvB;AAOA,eAAeb,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Slick from 'react-slick';\r\nimport {Button} from \"antd\";\r\n\r\nimport styled, {createGlobalStyle} from \"styled-components\";\r\n\r\nconst Overlay =styled.div`\r\n  position: fixed;\r\n  z-index: 5000;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 44px;\r\n  background: white;\r\n  position: relative;\r\n  padding: 0;\r\n  text-align: center;\r\n  \r\n  & h1{\r\n    margin: 0;\r\n    font-size: 17px;\r\n    color: #333;\r\n    line-height: 44px;\r\n  }\r\n  \r\n`;\r\n\r\nconst CloseBtn = styled(CloseOutlined)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 15px;\r\n  line-height: 14px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst SlickWrapper = styled.div`\r\n  height: calc(100% - 44px);\r\n  background: #090909;\r\n`;\r\n\r\nconst ImgWrapper = styled.div`\r\n  padding:32px;\r\n  text-align: center;\r\n  \r\n  & img {\r\n    margin: 0 auto;\r\n    max-height: 750px;\r\n  }\r\n`\r\n\r\nconst Global = createGlobalStyle`\r\n    .slick-slide{\r\n      display: inline-block;\r\n    }\r\n    .ant-card-cover {\r\n      transform: none !important;\r\n    }\r\n`;\r\n\r\nconst ImagesZoom = ({images, onClose}) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    return(\r\n        <Overlay>\r\n            <Global />\r\n            <Header>\r\n                <h1>Detail Page</h1>\r\n                <CloseBtn onClick={onClose}>X</CloseBtn>\r\n            </Header>\r\n            <SlickWrapper>\r\n                <div>\r\n                    <Slick\r\n                        initialSlide={0}\r\n                        afterChange={(slide) => setCurrentSlide(slide)}\r\n                        infinite\r\n                        slidesToShow={1}\r\n                        slidesToScroll={1}\r\n                    >\r\n                        {images.map((v) => (\r\n                            <ImgWrapper key={v.src}>\r\n                                <img src={v.src} alt={v.src} />\r\n                            </ImgWrapper>\r\n                        ))}\r\n                    </Slick>\r\n                    <Indicator>\r\n                        <div>\r\n                            \r\n                        </div>\r\n                    </Indicator>\r\n                </div>\r\n            </SlickWrapper>\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nImagesZoom.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.shape({\r\n        src: PropTypes.string,\r\n    })).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}