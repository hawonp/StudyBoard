{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\pages\\\\studyBoard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport AppLayout from '../components/AppLayout';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar studyBoard = function studyBoard() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostsLoading = _useSelector2.loadPostsLoading;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    // scrolly : 얼마나 내렸는지 , clientHeight: 화면 보이는 길이, scrollHeight: 총길이\n    // react-vertualized 구현 해봐야함\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"global-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"local-nav-links\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          maxWidth: '1000px',\n          margin: '0 auto',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uC778\\uAE30\\uC788\\uB294 \\uAC8C\\uC2DC\\uAE00 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 26\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, _this), mainPosts.map(function (p) {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            post: p\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(studyBoard, \"oqG10cifXvQtI8RQRta7gdIVAso=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\nexport default studyBoard;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/pages/studyBoard.js"],"names":["React","useEffect","useSelector","useDispatch","Link","PostForm","PostCard","AppLayout","LOAD_POSTS_REQUEST","studyBoard","dispatch","state","user","me","post","mainPosts","hasMorePosts","loadPostsLoading","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","data","length","id","addEventListener","removeEventListener","display","justifyContent","maxWidth","margin","height","map","p"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst studyBoard = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // scrolly : 얼마나 내렸는지 , clientHeight: 화면 보이는 길이, scrollHeight: 총길이\r\n    // react-vertualized 구현 해봐야함\r\n    function onScroll() {\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            data: mainPosts[mainPosts.length - 1].id,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <nav className=\"global-nav\">\r\n        <div\r\n          className=\"local-nav-links\"\r\n          style={{ display: 'flex',\r\n            justifyContent: 'space-between',\r\n            maxWidth: '1000px',\r\n            margin: '0 auto',\r\n            height: '100%' }}\r\n        >\r\n          <Link href=\"/\"><a>인기있는 게시글 </a></Link>\r\n          {me && <PostForm />}\r\n          {mainPosts.map((p) => (\r\n            <PostCard key={p.id} post={p} />\r\n          ))}\r\n        </div>\r\n      </nav>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default studyBoard;\r\n"]},"metadata":{},"sourceType":"module"}