{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\pages\\\\studyBoard.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport AppLayout from '../components/AppLayout';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst studyBoard = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    // scrolly : 얼마나 내렸는지 , clientHeight: 화면 보이는 길이, scrollHeight: 총길이\n    // react-vertualized 구현 해봐야함\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\n        if (hasMorePosts && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            data: mainPosts[mainPosts.length - 1].id\n          });\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\n  return /*#__PURE__*/_jsxDEV(AppLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"global-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"local-nav-links\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          maxWidth: '1000px',\n          margin: '0 auto',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uC778\\uAE30\\uC788\\uB294 \\uAC8C\\uC2DC\\uAE00 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), me && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 18\n        }, this), mainPosts.map(p => /*#__PURE__*/_jsxDEV(PostCard, {\n          post: p\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport default studyBoard;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/pages/studyBoard.js"],"names":["React","useEffect","useSelector","useDispatch","Link","PostForm","PostCard","AppLayout","LOAD_POSTS_REQUEST","studyBoard","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","type","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","data","length","id","addEventListener","removeEventListener","display","justifyContent","maxWidth","margin","height","map","p"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAST,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;AACA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA;AAA3B,MAAgDd,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACK,IAAlB,CAAjE;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,aAASkB,QAAT,GAAoB;AAClB,UAAIC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,YAAIV,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrCN,UAAAA,QAAQ,CAAC;AACPQ,YAAAA,IAAI,EAAEV,kBADC;AAEPkB,YAAAA,IAAI,EAAEZ,SAAS,CAACA,SAAS,CAACa,MAAV,GAAmB,CAApB,CAAT,CAAgCC;AAF/B,WAAD,CAAR;AAID;AACF;AACF;;AACDR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCV,QAAlC;AACA,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCX,QAArC;AACD,KAFD;AAGD,GAjBQ,EAiBN,CAACL,SAAD,EAAYC,YAAZ,EAA0BC,gBAA1B,CAjBM,CAAT;AAmBA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,KAAK,EAAE;AAACe,UAAAA,OAAO,EAAE,MAAV;AACtCC,UAAAA,cAAc,EAAE,eADsB;AAEtCC,UAAAA,QAAQ,EAAE,QAF4B;AAGtCC,UAAAA,MAAM,EAAE,QAH8B;AAItCC,UAAAA,MAAM,EAAE;AAJ8B,SAAxC;AAAA,gCAKE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,GAAX;AAAA,iCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,gBALF,EAMGxB,EAAE,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBANT,EAOGG,SAAS,CAACsB,GAAV,CAAeC,CAAD,iBACb,QAAC,QAAD;AAAqB,UAAA,IAAI,EAAEA;AAA3B,WAAeA,CAAC,CAACT,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/CD;;AAiDA,eAAenB,UAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Link from 'next/link';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst studyBoard = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_POSTS_REQUEST,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // scrolly : 얼마나 내렸는지 , clientHeight: 화면 보이는 길이, scrollHeight: 총길이\r\n    // react-vertualized 구현 해봐야함\r\n    function onScroll() {\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            data: mainPosts[mainPosts.length - 1].id,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      <nav className=\"global-nav\">\r\n        <div className=\"local-nav-links\" style={{display: 'flex',\r\n          justifyContent: 'space-between',\r\n          maxWidth: '1000px',\r\n          margin: '0 auto',\r\n          height: '100%',}}>\r\n          <Link href=\"/\"><a>인기있는 게시글 </a></Link>\r\n          {me && <PostForm />}\r\n          {mainPosts.map((p) => (\r\n            <PostCard key={p.id} post={p} />\r\n          ))}\r\n        </div>\r\n      </nav>\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default studyBoard;\r\n"]},"metadata":{},"sourceType":"module"}