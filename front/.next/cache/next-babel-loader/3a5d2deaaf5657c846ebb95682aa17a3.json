{"ast":null,"code":"import { all, fork, call, put, throttle, takeLatest, delay } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post'; // addpost\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: e.response.data\n    });\n  }\n} // 커맨트\n\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  // 몇초제안 하는거 throttle 2초 보안으로\n  yield throttle(ADD_POST_REQUEST, addPost, 20000);\n}\n\nfunction* watchAddComment() {\n  // 몇초제안 하는거 throttle 2초 보안으로\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/sagas/post.js"],"names":["all","fork","call","put","throttle","takeLatest","delay","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","data","post","addPost","action","type","e","response","addCommentAPI","postId","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,QAA/B,EAAyCC,UAAzC,EAAqDC,KAArD,QAAkE,oBAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EACuBC,mBADvB,EAC4CC,mBAD5C,EAEEC,gBAFF,EAEoBC,gBAFpB,EAEsCC,gBAFtC,QAGO,kBAHP,C,CAKA;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEN,gBADE;AAERE,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOK,CAAP,EAAU;AACV,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAER,gBADE;AAERI,MAAAA,IAAI,EAAEK,CAAC,CAACC,QAAF,CAAWN;AAFT,KAAD,CAAT;AAID;AACF,C,CAED;;;AACA,SAASO,aAAT,CAAuBP,IAAvB,EAA6B;AAC3B,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACQ,MAAO,UAApC,EAA+CR,IAA/C,CAAP;AACD;;AAED,UAAUS,UAAV,CAAqBN,MAArB,EAA6B;AAC3B,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMH,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAET,mBADE;AAERK,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOK,CAAP,EAAU;AACV,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEX,mBADE;AAERO,MAAAA,IAAI,EAAEK,CAAC,CAACC,QAAF,CAAWN;AAFT,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,YAAV,GAAyB;AACvB;AACA,QAAMrB,QAAQ,CAACQ,gBAAD,EAAmBK,OAAnB,EAA4B,KAA5B,CAAd;AACD;;AAED,UAAUS,eAAV,GAA4B;AAC1B;AACA,QAAMrB,UAAU,CAACI,mBAAD,EAAsBe,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAM3B,GAAG,CAAC,CACRC,IAAI,CAACwB,YAAD,CADI,EAERxB,IAAI,CAACyB,eAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, call, put, throttle, takeLatest, delay } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS,\r\n  ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS,\r\n} from '../reducers/post';\r\n\r\n// addpost\r\nfunction addPostAPI(data) {\r\n  return axios.post('/api/post', data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    // const result = yield call(addPostAPI, action.data)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 커맨트\r\nfunction addCommentAPI(data) {\r\n  return axios.post(`/api/post/${data.postId}/comment`, data);\r\n}\r\n\r\nfunction* addComment(action) {\r\n  try {\r\n    // const result = yield call(addCommentAPI, action.data);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: ADD_COMMENT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: ADD_COMMENT_FAILURE,\r\n      data: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  // 몇초제안 하는거 throttle 2초 보안으로\r\n  yield throttle(ADD_POST_REQUEST, addPost, 20000);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  // 몇초제안 하는거 throttle 2초 보안으로\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([\r\n    fork(watchAddPost),\r\n    fork(watchAddComment),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}