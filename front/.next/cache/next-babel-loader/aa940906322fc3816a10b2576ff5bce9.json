{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    postAdded\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  useEffect(() => {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"Write your Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"Image Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: 'http://localhost:3000/' + v,\n            style: {\n              width: '200px'\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/components/PostForm.js"],"names":["React","useRef","useCallback","useState","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","PostForm","imagePaths","postAdded","state","post","text","setText","dispatch","imageInput","onClickImageUpload","current","click","onChangeText","e","target","value","onSubmit","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useState, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, postAdded } = useSelector((state) => state.post);\r\n    const [text, setText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n\r\n    const onClickImageUpload = useCallback(() => {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    useEffect(() => {\r\n        if (postAdded) {\r\n            setText('');\r\n        }\r\n    }, [postAdded]);\r\n\r\n    const onChangeText = useCallback((e) => {\r\n        setText(e.target.value);\r\n    }, []);\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost);\r\n    }, []);\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"Write your Question\" />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput} />\r\n                <Button onClick={onClickImageUpload}>Image Upload</Button>\r\n                <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">POST</Button>\r\n            </div>\r\n            <div>\r\n                {/*이미지경로를 반복문돌려서 업로드하는거임*/}\r\n                {imagePaths.map((v) => {\r\n                    return (\r\n                        <div key={v} style={{ display: 'inline-block' }}>\r\n                            <img src={'http://localhost:3000/' + v} style={{ width: '200px' }} alt={v} />\r\n                            <div>\r\n                                <Button>Delete</Button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}