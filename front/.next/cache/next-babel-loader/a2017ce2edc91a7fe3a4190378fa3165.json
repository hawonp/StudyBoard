{"ast":null,"code":"import { all, fork, call, put, throttle } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from '../reducers/post'; //addpost\n\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: e.response.data\n    });\n  }\n} //커맨트\n\n\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: e.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  //몇초제안 하는거 throttle 2초 보안으로\n  yield throttle(LOG_POST_REQUEST, addPost, 20000);\n}\n\nfunction* watchAddComment() {\n  //몇초제안 하는거 throttle 2초 보안으로\n  yield throttle(LOG_COMMENT_REQUEST, addPost, 20000);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/sagas/post.js"],"names":["all","fork","call","put","throttle","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","data","post","addPost","action","result","type","e","response","addCommentAPI","postId","addComment","watchAddPost","LOG_POST_REQUEST","watchAddComment","LOG_COMMENT_REQUEST","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,QAA/B,QAA+C,oBAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACIC,mBADJ,EACyBC,mBADzB,EAC8CC,mBAD9C,EAEIC,gBAFJ,EAEsBC,gBAFtB,EAEyCC,gBAFzC,QAGO,kBAHP,C,CAMA;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOR,KAAK,CAACS,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACH;;AAED,UAAUE,OAAV,CAAkBC,MAAlB,EAAyB;AACrB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMf,IAAI,CAACU,UAAD,EAAaI,MAAM,CAACH,IAApB,CAAzB;AACA,UAAMV,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEP,gBADA;AAENE,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,CAAP,EAAU;AACR,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAET,gBADA;AAENI,MAAAA,IAAI,EAAEM,CAAC,CAACC,QAAF,CAAWP;AAFX,KAAD,CAAT;AAIH;AACJ,C,CAED;;;AACA,SAASQ,aAAT,CAAuBR,IAAvB,EAA4B;AACxB,SAAOR,KAAK,CAACS,IAAN,CAAY,aAAYD,IAAI,CAACS,MAAO,UAApC,EAA+CT,IAA/C,CAAP;AACH;;AAED,UAAUU,UAAV,CAAqBP,MAArB,EAA4B;AACxB,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMf,IAAI,CAACmB,aAAD,EAAgBL,MAAM,CAACH,IAAvB,CAAzB;AACA,UAAMV,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEV,mBADA;AAENK,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOM,CAAP,EAAU;AACR,UAAMhB,GAAG,CAAC;AACNe,MAAAA,IAAI,EAAEZ,mBADA;AAENO,MAAAA,IAAI,EAAEM,CAAC,CAACC,QAAF,CAAWP;AAFX,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUW,YAAV,GAAwB;AACpB;AACA,QAAMpB,QAAQ,CAACqB,gBAAD,EAAmBV,OAAnB,EAA4B,KAA5B,CAAd;AACH;;AAED,UAAUW,eAAV,GAA2B;AACvB;AACA,QAAMtB,QAAQ,CAACuB,mBAAD,EAAsBZ,OAAtB,EAA+B,KAA/B,CAAd;AACH;;AAED,eAAe,UAAUa,QAAV,GAAoB;AAC/B,QAAM5B,GAAG,CAAC,CACNC,IAAI,CAACuB,YAAD,CADE,EAENvB,IAAI,CAACyB,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, call, put, throttle } from 'redux-saga/effects'\r\nimport axios from 'axios';\r\nimport {\r\n    ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS,\r\n    ADD_POST_FAILURE, ADD_POST_REQUEST,  ADD_POST_SUCCESS,\r\n} from '../reducers/post';\r\n\r\n\r\n//addpost\r\nfunction addPostAPI(data){\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action){\r\n    try{\r\n        const result = yield call(addPostAPI, action.data)\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            data: e.response.data,\r\n        })\r\n    }\r\n}\r\n\r\n//커맨트\r\nfunction addCommentAPI(data){\r\n    return axios.post(`/api/post/${data.postId}/comment`, data)\r\n}\r\n\r\nfunction* addComment(action){\r\n    try{\r\n        const result = yield call(addCommentAPI, action.data)\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: e.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    //몇초제안 하는거 throttle 2초 보안으로\r\n    yield throttle(LOG_POST_REQUEST, addPost, 20000);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    //몇초제안 하는거 throttle 2초 보안으로\r\n    yield throttle(LOG_COMMENT_REQUEST, addPost, 20000);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}