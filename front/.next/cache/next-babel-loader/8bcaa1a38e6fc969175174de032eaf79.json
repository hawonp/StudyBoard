{"ast":null,"code":"import { call, all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (e) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: e.response.data\n    });\n  }\n} // 로그인아웃 API\n\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    const result = yield call(logOutAPI);\n    yield put({\n      type: 'LOG_OUT_SUCCESS',\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: e.response.data\n    });\n  }\n}\n\nfunction* watchLogin() {\n  //takeLatest 두번눌렸을때 마지막꺼만\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogout() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([//fork는 함수를 실행해준다\n  fork(watchLogin), fork(watchLogout)]);\n}","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/sagas/user.js"],"names":["call","all","delay","fork","put","takeLatest","axios","logInAPI","data","post","logIn","action","type","e","response","logOutAPI","logOut","result","watchLogin","watchLogout","userSaga"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,IAA1B,EAAgCC,GAAhC,EAAqCC,UAArC,QAAsD,oBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,QAAT,CAAkBC,IAAlB,EAAuB;AACnB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACC;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENJ,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOK,CAAP,EAAU;AACR,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENJ,MAAAA,IAAI,EAAEK,CAAC,CAACC,QAAF,CAAWN;AAFX,KAAD,CAAT;AAIH;AACJ,C,CAED;;;AACA,SAASO,SAAT,GAAoB;AAChB,SAAOT,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUO,MAAV,GAAkB;AACd,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMjB,IAAI,CAACe,SAAD,CAAzB;AACA,UAAMX,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENJ,MAAAA,IAAI,EAAES,MAAM,CAACT;AAFP,KAAD,CAAT;AAIH,GAND,CAME,OAAOK,CAAP,EAAU;AACR,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENJ,MAAAA,IAAI,EAAEK,CAAC,CAACC,QAAF,CAAWN;AAFX,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUU,UAAV,GAAsB;AAClB;AACA,QAAMb,UAAU,CAAC,gBAAD,EAAmBK,KAAnB,CAAhB;AACH;;AACD,UAAUS,WAAV,GAAuB;AACnB,QAAMd,UAAU,CAAC,iBAAD,EAAoBW,MAApB,CAAhB;AACH;;AAGD,eAAe,UAAUI,QAAV,GAAoB;AAC/B,QAAMnB,GAAG,CAAC,CACN;AACAE,EAAAA,IAAI,CAACe,UAAD,CAFE,EAGNf,IAAI,CAACgB,WAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {call, all, delay, fork, put, takeLatest} from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction logInAPI(data){\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action){\r\n    try{\r\n        // const result = yield call(logInAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_IN_SUCCESS',\r\n            data: action.data\r\n        });\r\n    } catch (e) {\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            data: e.response.data,\r\n        })\r\n    }\r\n}\r\n\r\n// 로그인아웃 API\r\nfunction logOutAPI(){\r\n    return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut(){\r\n    try{\r\n        const result = yield call(logOutAPI)\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n            data: result.data\r\n        });\r\n    } catch (e) {\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: e.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogin(){\r\n    //takeLatest 두번눌렸을때 마지막꺼만\r\n    yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\nfunction* watchLogout(){\r\n    yield takeLatest('LOG_OUT_REQUEST', logOut);\r\n}\r\n\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        //fork는 함수를 실행해준다\r\n        fork(watchLogin),\r\n        fork(watchLogout),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}