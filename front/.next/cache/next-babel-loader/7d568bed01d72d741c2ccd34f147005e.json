{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\components\\\\PostForm.js\";\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nimport useinput from '../hooks/useinput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, OnChangetext, setText] = useinput('');\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]); // 리듀서에있는 디스페치 포스트를 가져와서 ADD해준다 ADDPOST는 객체다다\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n    setText('');\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: OnChangetext,\n      maxLength: 140,\n      placeholder: \"Write your Question & Hashtag ex) #quiz #CSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"Image Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: 'right'\n        },\n        htmlType: \"submit\",\n        children: \"POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:3000/${v}`,\n          style: {\n            width: '200px'\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PostForm;","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/components/PostForm.js"],"names":["React","useRef","useCallback","useEffect","Form","Input","Button","useDispatch","useSelector","addPost","useinput","PostForm","imagePaths","addPostDone","state","post","dispatch","text","OnChangetext","setText","imageInput","onClickImageUpload","current","click","onSubmit","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React, { useRef, useCallback, useEffect } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\nimport useinput from '../hooks/useinput';\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, OnChangetext, setText] = useinput('');\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText('');\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  // 리듀서에있는 디스페치 포스트를 가져와서 ADD해준다 ADDPOST는 객체다다\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost(text));\r\n    setText('');\r\n  }, [text]);\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n      <Input.TextArea value={text} onChange={OnChangetext} maxLength={140} placeholder=\"Write your Question & Hashtag ex) #quiz #CSE\" />\r\n      <div>\r\n        {/* ref가 실제 도메인에 접근하는거 이미지 인풋넣으려면 파일타입으로 */}\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>Image Upload</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">POST</Button>\r\n      </div>\r\n      <div>\r\n        {/* 이미지경로를 반복문돌려서 업로드하는거임 */}\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: 'inline-block' }}>\r\n            <img src={`http://localhost:3000/${v}`} style={{ width: '200px' }} alt={v} />\r\n            <div>\r\n              <Button>Delete</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"]},"metadata":{},"sourceType":"module"}