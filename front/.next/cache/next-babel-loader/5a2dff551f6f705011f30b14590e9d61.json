{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unfollow),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnfollow),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { call, all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { FOLLOW_REQUEST, FOLLOW_FAILURE, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n} // 로그인아웃 API\n\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction logOut(action) {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n} // signUp api는 제너레이터가아니다\n\n\nfunction signUpAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction signUp() {\n  var result;\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(signUpAPI);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return delay(1000);\n\n        case 6:\n          _context3.next = 8;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            data: result.data\n          });\n\n        case 8:\n          _context3.next = 14;\n          break;\n\n        case 10:\n          _context3.prev = 10;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 14;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 10]]);\n} // follow api는 제너레이터가아니다\n\n\nfunction followAPI() {\n  return axios.post('/api/follow');\n}\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context4.next = 12;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 12;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n} // unfollow api는 제너레이터가아니다\n\n\nfunction unfollowAPI() {\n  return axios.post('/api/unfollow');\n}\n\nfunction unfollow(action) {\n  return _regeneratorRuntime.wrap(function unfollow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context5.next = 5;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context5.next = 12;\n          break;\n\n        case 7:\n          _context5.prev = 7;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 12;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 7]]);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchUnfollow() {\n  return _regeneratorRuntime.wrap(function watchUnfollow$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(FOLLOW_REQUEST, unfollow);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return all([// fork는 함수를 실행해준다\n          fork(watchLogin), fork(watchFollow), fork(watchUnfollow), fork(watchLogout), fork(watchSignUp)]);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/sagas/user.js"],"names":["logIn","logOut","signUp","follow","unfollow","watchLogin","watchLogout","watchSignUp","watchFollow","watchUnfollow","userSaga","call","all","delay","fork","put","takeLatest","axios","FOLLOW_REQUEST","FOLLOW_FAILURE","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","logInAPI","data","post","action","type","error","response","logOutAPI","signUpAPI","result","followAPI","console","unfollowAPI","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE"],"mappings":";;oDAcUA,K;qDAqBAC,M;qDAqBAC,M;qDAqBAC,M;qDAsBAC,Q;qDAiBAC,U;qDAIAC,W;qDAGAC,W;qDAGAC,W;sDAGAC,a;sDAIeC,Q;;AArIzB,SAASC,IAAT,EAAeC,GAAf,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,cADF,EACkBC,cADlB,EACkCC,cADlC,EAEEC,cAFF,EAEkBC,cAFlB,EAEkCC,cAFlC,EAGEC,eAHF,EAGmBC,eAHnB,EAGoCC,eAHpC,EAIEC,eAJF,EAImBC,eAJnB,EAIoCC,eAJpC,QAMO,kBANP;;AAQA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOd,KAAK,CAACe,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,SAAU/B,KAAV,CAAgBiC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMpB,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAME,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEX,cADE;AAERQ,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMhB,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEb,cADE;AAERc,YAAAA,KAAK,EAAE,YAAEC,QAAF,CAAWL;AAFV,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAgBA;;;AACA,SAASM,SAAT,GAAqB;AACnB,SAAOpB,KAAK,CAACe,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAAU/B,MAAV,CAAiBgC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMpB,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAME,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAER,eADE;AAERK,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMhB,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEV,eADE;AAERW,YAAAA,KAAK,EAAE,aAAEC,QAAF,CAAWL;AAFV,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAgBA;;;AACA,SAASO,SAAT,GAAqB;AACnB,SAAOrB,KAAK,CAACe,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAAU9B,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMS,IAAI,CAAC2B,SAAD,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAM1B,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAME,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEL,eADE;AAERE,YAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMhB,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEP,eADE;AAERQ,YAAAA,KAAK,EAAE,aAAEC,QAAF,CAAWL;AAFV,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAgBA;;;AACA,SAASS,SAAT,GAAqB;AACnB,SAAOvB,KAAK,CAACe,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAAU7B,MAAV,CAAiB8B,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMpB,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAME,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEd,cADE;AAERW,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIU,UAAAA,OAAO,CAACN,KAAR;AATJ;AAUI,iBAAMpB,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEf,cADE;AAERgB,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaL;AAFZ,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAiBA;;;AACA,SAASW,WAAT,GAAuB;AACrB,SAAOzB,KAAK,CAACe,IAAN,CAAW,eAAX,CAAP;AACD;;AAED,SAAU5B,QAAV,CAAmB6B,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMpB,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAME,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAES,gBADE;AAERZ,YAAAA,IAAI,EAAEE,MAAM,CAACF;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AASIU,UAAAA,OAAO,CAACN,KAAR;AATJ;AAUI,iBAAMpB,GAAG,CAAC;AACRmB,YAAAA,IAAI,EAAEU,gBADE;AAERT,YAAAA,KAAK,EAAE,aAAIC,QAAJ,CAAaL;AAFZ,WAAD,CAAT;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAiBA,SAAU1B,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE,iBAAMW,UAAU,CAACM,cAAD,EAAiBtB,KAAjB,CAAhB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUM,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMU,UAAU,CAACS,eAAD,EAAkBxB,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUM,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMS,UAAU,CAACY,eAAD,EAAkB1B,MAAlB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUM,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMQ,UAAU,CAACE,cAAD,EAAiBf,MAAjB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA,SAAUM,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACE,cAAD,EAAiBd,QAAjB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUM,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CACR;AACAE,UAAAA,IAAI,CAACT,UAAD,CAFI,EAGRS,IAAI,CAACN,WAAD,CAHI,EAIRM,IAAI,CAACL,aAAD,CAJI,EAKRK,IAAI,CAACR,WAAD,CALI,EAMRQ,IAAI,CAACP,WAAD,CANI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { call, all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport {\r\n  FOLLOW_REQUEST, FOLLOW_FAILURE, FOLLOW_SUCCESS,\r\n  LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS,\r\n\r\n} from '../reducers/user';\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/api/login', data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data)\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 로그인아웃 API\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout');\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    // const result = yield call(logOutAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// signUp api는 제너레이터가아니다\r\nfunction signUpAPI() {\r\n  return axios.post('/api/logout');\r\n}\r\n\r\nfunction* signUp() {\r\n  try {\r\n    const result = yield call(signUpAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: e.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// follow api는 제너레이터가아니다\r\nfunction followAPI() {\r\n  return axios.post('/api/follow');\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// unfollow api는 제너레이터가아니다\r\nfunction unfollowAPI() {\r\n  return axios.post('/api/unfollow');\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLogin() {\r\n  // takeLatest 두번눌렸을때 마지막꺼만\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogout() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    // fork는 함수를 실행해준다\r\n    fork(watchLogin),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogout),\r\n    fork(watchSignUp),\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}