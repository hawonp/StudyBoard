{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\PYUNGKANG HONG\\\\Desktop\\\\CSE416_capstone\\\\front\\\\components\\\\PostCard.js\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\nimport PropTypes from 'prop-types';\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { useSelector } from 'react-redux'; // 커맨트폼\n\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport PostImages from './PostImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar CardWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));\n_c = CardWrapper;\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var id = useSelector(function (state) {\n    return state.user.me && state.user.me.id;\n  });\n\n  var _useState2 = useState(false),\n      liked = _useState2[0],\n      setLiked = _useState2[1]; // 좋아요를 눌르고 때고 하는부분\n\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"message\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this)\n      }, \"ellipsis\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname // 해시테그\n        ,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \" comments\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment // 누가썼는지\n            , {\n              author: item.User.nickname //\n              ,\n              avatar: /*#__PURE__*/_jsxDEV(Link, {\n                href: {\n                  pathname: '/user',\n                  query: {\n                    id: item.User.id\n                  }\n                },\n                as: \"/user/\".concat(item.User.id),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    children: item.User.nickname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 26\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PostCard, \"+5KxjPCW3FV0o49CDsZMpd+x3qc=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"PostCard\");","map":{"version":3,"sources":["C:/Users/PYUNGKANG HONG/Desktop/CSE416_capstone/front/components/PostCard.js"],"names":["React","useState","useCallback","Card","Button","Avatar","Popover","List","Comment","PropTypes","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","styled","Link","useSelector","CommentForm","PostCardContent","PostImages","CardWrapper","div","PostCard","post","commentFormOpened","setCommentFormOpened","id","state","user","me","liked","setLiked","onToggleLike","prev","onToggleComment","Images","User","nickname","content","Comments","length","item","pathname","query","propTypes","shape","number","object","string","createdAt","arrayOf","any"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Card, Button, Avatar, Popover, List, Comment } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// 커맨트폼\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport PostImages from './PostImages';\r\n\r\nconst CardWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n  const id = useSelector((state) => state.user.me && state.user.me.id);\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  // 좋아요를 눌르고 때고 하는부분\r\n  const onToggleLike = useCallback(() => {\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback(() => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <CardWrapper key={post.id}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          liked\r\n            ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n            : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n          <MessageOutlined key=\"message\" onClick={onToggleComment} />,\r\n          <Popover\r\n            key=\"ellipsis\"\r\n            content={(\r\n              <Button.Group>\r\n                {id && post.User.id === id\r\n                  ? (\r\n                    <>\r\n                        <Button>Edit</Button>\r\n                        <Button type=\"danger\">Delete</Button>\r\n                    </>\r\n                  )\r\n                  : <Button>Report</Button>}\r\n              </Button.Group>\r\n                        )}\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n                    // 해시테그\r\n          description={<PostCardContent postData={post.content} />}\r\n        />\r\n      </Card>\r\n      {commentFormOpened && (\r\n        <>\r\n          {/* 뎃글을 작성할때 게시글에 속해있으니 정보가 필요하다 게시글의 아이디가 필요하다 */}\r\n          <CommentForm post={post} />\r\n          <List\r\n            header={`${post.Comments.length} comments`}\r\n            itemLayout=\"horizontal\"\r\n            dataSource={post.Comments}\r\n            renderItem={(item) => (\r\n              <li>\r\n                {/* 엔트디에 커맨트라고 준비해둠 */}\r\n                <Comment\r\n                                    // 누가썼는지\r\n                  author={item.User.nickname}\r\n                                    //\r\n                  avatar={(\r\n                    <Link href={{ pathname: '/user', query: { id: item.User.id } }} as={`/user/${item.User.id}`}>\r\n                      <a><Avatar>{item.User.nickname[0]}</Avatar></a>\r\n                    </Link>\r\n                                    )}\r\n                  content={item.content}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </>\r\n      )}\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.any),\r\n    Images: PropTypes.arrayOf(PropTypes.any),\r\n  }),\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}