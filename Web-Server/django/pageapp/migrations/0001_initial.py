# Generated by Django 3.2.8 on 2021-10-25 14:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.IntegerField(primary_key=True, serialize=False)),
                ('post_title', models.CharField(max_length=32, null=True)),
                ('post_text', models.CharField(max_length=1024, null=True)),
                ('post_like_count', models.IntegerField(default=0)),
                ('post_reply_count', models.IntegerField(default=0)),
                ('post_favourite_count', models.IntegerField(default=0)),
                ('post_date', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('reply_id', models.IntegerField(primary_key=True, serialize=False)),
                ('reply_text', models.CharField(max_length=512)),
                ('reply_like_count', models.IntegerField(default=0)),
                ('reply_date', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'reply',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.IntegerField(primary_key=True, serialize=False)),
                ('tag_name', models.CharField(max_length=32)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_nickname', models.CharField(max_length=16, null=True)),
                ('user_is_endorsed', models.IntegerField(default=0)),
                ('user_is_mod', models.IntegerField(default=0)),
                ('user_flags_received', models.IntegerField(default=0)),
                ('user_likes_received', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='BlacklistedUser',
            fields=[
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='pageapp.user')),
            ],
            options={
                'db_table': 'blacklisted_user',
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('search_id', models.IntegerField(primary_key=True, serialize=False)),
                ('search_text', models.CharField(max_length=128)),
                ('search_date', models.DateTimeField(null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user')),
            ],
            options={
                'db_table': 'search_history',
            },
        ),
        migrations.CreateModel(
            name='ReplyReport',
            fields=[
                ('report_id', models.IntegerField(primary_key=True, serialize=False)),
                ('report_text', models.CharField(max_length=256, null=True)),
                ('report_date', models.DateTimeField(null=True)),
                ('reply_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.reply')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='pageapp.user')),
            ],
            options={
                'db_table': 'reply_report',
            },
        ),
        migrations.AddField(
            model_name='reply',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user'),
        ),
        migrations.CreateModel(
            name='PostReport',
            fields=[
                ('report_id', models.IntegerField(primary_key=True, serialize=False)),
                ('report_text', models.CharField(max_length=256, null=True)),
                ('report_date', models.DateTimeField(null=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.post')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='pageapp.user')),
            ],
            options={
                'db_table': 'post_report',
            },
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('image_id', models.IntegerField(primary_key=True, serialize=False)),
                ('image_url', models.CharField(max_length=256, null=True)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.post')),
            ],
            options={
                'db_table': 'post_image',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.IntegerField(primary_key=True, serialize=False)),
                ('notification_text', models.CharField(max_length=128)),
                ('notification_date', models.DateTimeField(null=True)),
                ('notification_seen', models.IntegerField(default=0)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user')),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='UserTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.tag')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user')),
            ],
            options={
                'db_table': 'user_tag',
                'unique_together': {('tag_id', 'user_id')},
            },
        ),
        migrations.CreateModel(
            name='UserReplyLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.reply')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user')),
            ],
            options={
                'db_table': 'user_reply_like',
                'unique_together': {('user_id', 'reply_id')},
            },
        ),
        migrations.CreateModel(
            name='UserPostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.post')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user')),
            ],
            options={
                'db_table': 'user_post_like',
                'unique_together': {('user_id', 'post_id')},
            },
        ),
        migrations.CreateModel(
            name='ReplyToReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replier', to='pageapp.reply')),
                ('source_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source', to='pageapp.reply')),
            ],
            options={
                'db_table': 'reply_to_reply',
                'unique_together': {('source_id', 'reply_id')},
            },
        ),
        migrations.CreateModel(
            name='ReplyToPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.post')),
                ('reply_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.reply')),
            ],
            options={
                'db_table': 'reply_to_post',
                'unique_together': {('post_id', 'reply_id')},
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.post')),
                ('tag_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.tag')),
            ],
            options={
                'db_table': 'post_tag',
                'unique_together': {('tag_id', 'post_id')},
            },
        ),
        migrations.CreateModel(
            name='FavouriteQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.post')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pageapp.user')),
            ],
            options={
                'unique_together': {('post_id', 'user_id')},
            },
        ),
    ]
